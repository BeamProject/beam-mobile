// Mocks generated by Mockito 5.0.7 from annotations
// in beam/features/data/datasources/testing/datasources_module.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:beam/features/data/datasources/payments_local_data_source.dart'
    as _i9;
import 'package:beam/features/data/datasources/payments_remote_data_source.dart'
    as _i11;
import 'package:beam/features/data/datasources/steps/step_counter_local_data_source.dart'
    as _i3;
import 'package:beam/features/data/datasources/user_local_data_source.dart'
    as _i8;
import 'package:beam/features/data/datasources/user_remote_data_source.dart'
    as _i6;
import 'package:beam/features/domain/entities/login_result.dart' as _i7;
import 'package:beam/features/domain/entities/payment.dart' as _i10;
import 'package:beam/features/domain/entities/payment_request.dart' as _i13;
import 'package:beam/features/domain/entities/payment_result.dart' as _i12;
import 'package:beam/features/domain/entities/steps/daily_step_count.dart'
    as _i5;
import 'package:beam/features/domain/entities/user.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeUser extends _i1.Fake implements _i2.User {}

/// A class which mocks [StepCounterLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockStepCounterLocalDataSource extends _i1.Mock
    implements _i3.StepCounterLocalDataSource {
  MockStepCounterLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.DailyStepCount>> getDailyStepCounts(DateTime? day) =>
      (super.noSuchMethod(Invocation.method(#getDailyStepCounts, [day]),
          returnValue: Future<List<_i5.DailyStepCount>>.value(
              <_i5.DailyStepCount>[])) as _i4.Future<List<_i5.DailyStepCount>>);
  @override
  _i4.Future<List<_i5.DailyStepCount>> getDailyStepCountRange(
          DateTime? from, DateTime? to) =>
      (super.noSuchMethod(
          Invocation.method(#getDailyStepCountRange, [from, to]),
          returnValue: Future<List<_i5.DailyStepCount>>.value(
              <_i5.DailyStepCount>[])) as _i4.Future<List<_i5.DailyStepCount>>);
  @override
  _i4.Future<void> updateDailyStepCount(_i5.DailyStepCount? stepCount) =>
      (super.noSuchMethod(Invocation.method(#updateDailyStepCount, [stepCount]),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> updateLastMeasurementTimestamp(int? timestampMsSinceEpoch) =>
      (super.noSuchMethod(
          Invocation.method(
              #updateLastMeasurementTimestamp, [timestampMsSinceEpoch]),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i4.Future<void>);
  @override
  _i4.Future<int?> getLastMeasurementTimestamp() =>
      (super.noSuchMethod(Invocation.method(#getLastMeasurementTimestamp, []),
          returnValue: Future<int?>.value(0)) as _i4.Future<int?>);
}

/// A class which mocks [UserRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRemoteDataSource extends _i1.Mock
    implements _i6.UserRemoteDataSource {
  MockUserRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i7.LoginResult> logIn(String? username, String? password) =>
      (super.noSuchMethod(Invocation.method(#logIn, [username, password]),
              returnValue:
                  Future<_i7.LoginResult>.value(_i7.LoginResult.SUCCESS))
          as _i4.Future<_i7.LoginResult>);
  @override
  _i4.Future<_i2.User?> getUser() =>
      (super.noSuchMethod(Invocation.method(#getUser, []),
              returnValue: Future<_i2.User?>.value(_FakeUser()))
          as _i4.Future<_i2.User?>);
}

/// A class which mocks [UserLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserLocalDataSource extends _i1.Mock
    implements _i8.UserLocalDataSource {
  MockUserLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.User?> getUser() =>
      (super.noSuchMethod(Invocation.method(#getUser, []),
              returnValue: Future<_i2.User?>.value(_FakeUser()))
          as _i4.Future<_i2.User?>);
  @override
  _i4.Future<void> updateUser(_i2.User? user) =>
      (super.noSuchMethod(Invocation.method(#updateUser, [user]),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> removeCurrentUser() =>
      (super.noSuchMethod(Invocation.method(#removeCurrentUser, []),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i4.Future<void>);
}

/// A class which mocks [PaymentsLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaymentsLocalDataSource extends _i1.Mock
    implements _i9.PaymentsLocalDataSource {
  MockPaymentsLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Stream<List<_i10.Payment>> getPayments() =>
      (super.noSuchMethod(Invocation.method(#getPayments, []),
              returnValue: Stream<List<_i10.Payment>>.empty())
          as _i4.Stream<List<_i10.Payment>>);
  @override
  _i4.Future<void> setPayments(List<_i10.Payment>? payments) =>
      (super.noSuchMethod(Invocation.method(#setPayments, [payments]),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> addPayment(_i10.Payment? payment) =>
      (super.noSuchMethod(Invocation.method(#addPayment, [payment]),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i4.Future<void>);
}

/// A class which mocks [PaymentsRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaymentsRemoteDataSource extends _i1.Mock
    implements _i11.PaymentsRemoteDataSource {
  MockPaymentsRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i12.PaymentResult> makeDelayedPayment(
          _i13.PaymentRequest? paymentRequest) =>
      (super.noSuchMethod(
              Invocation.method(#makeDelayedPayment, [paymentRequest]),
              returnValue:
                  Future<_i12.PaymentResult>.value(_i12.PaymentResult.SUCCESS))
          as _i4.Future<_i12.PaymentResult>);
  @override
  _i4.Stream<List<_i10.Payment>> getPayments(String? userId) =>
      (super.noSuchMethod(Invocation.method(#getPayments, [userId]),
              returnValue: Stream<List<_i10.Payment>>.empty())
          as _i4.Stream<List<_i10.Payment>>);
}
